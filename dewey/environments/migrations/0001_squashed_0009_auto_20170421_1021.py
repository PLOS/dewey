# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-21 17:56
from __future__ import unicode_literals

import dewey.core.utils
import dewey.environments
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import enumfields.fields

from django.apps import apps
from django.contrib.contenttypes.management import update_contenttypes


def update_environment_contenttypes(*args):
    environments = apps.get_app_config('environments')
    update_contenttypes(environments)


class Migration(migrations.Migration):

    replaces = [('environments', '0001_initial'), ('environments', '0002_auto_20160615_1512'), ('environments', '0003_auto_20160718_1439'), ('environments', '0004_auto_20160819_1609'), ('environments', '0004_auto_20160805_1413'), ('environments', '0005_merge'), ('environments', '0006_auto_20161103_1524'), ('environments', '0007_auto_20170405_1447'), ('environments', '0008_auto_20170420_1529'), ('environments', '0009_auto_20170421_1021')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=128)),
                ('kind', django_enumfield.db.fields.EnumField(default=1, enum=dewey.environments.ClusterType)),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='a short name for this environment')),
                ('hostname_regex', models.CharField(help_text='regex that defines valid host names for this env', max_length=128)),
                ('description', models.TextField(blank=True, help_text='(optional) description of the environment')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='FQDN', max_length=256)),
                ('operating_system', django_enumfield.db.fields.EnumField(default=1, enum=dewey.environments.OperatingSystem)),
                ('parent_id', models.PositiveIntegerField()),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Environment')),
                ('parent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='matches salt state name', max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Safe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name for this collection of secrets', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SafeAccessControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('safe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Safe')),
            ],
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='dotted-path key for this secret', max_length=256)),
                ('secret', models.TextField()),
                ('safe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Safe')),
            ],
        ),
        migrations.CreateModel(
            name='Vault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='a friendly name for this vault', max_length=256, unique=True)),
                ('all_environments', models.BooleanField(default=False, help_text='this vault is for secrets shared among environments')),
                ('vault_protocol', django_enumfield.db.fields.EnumField(default=1, enum=dewey.core.utils.ProtocolEnum)),
                ('vault_host', models.CharField(max_length=256)),
                ('vault_port', models.PositiveIntegerField()),
                ('transit_key_name', models.CharField(max_length=256)),
                ('vault_user', models.CharField(max_length=128)),
                ('vault_password_variable', models.CharField(help_text='environment variable containing password', max_length=128)),
                ('environment', models.ForeignKey(blank=True, help_text='this vault is specific to the selected environment', null=True, on_delete=django.db.models.deletion.CASCADE, to='environments.Environment')),
            ],
        ),
        migrations.AddField(
            model_name='safe',
            name='vault',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='environments.Vault'),
        ),
        migrations.AddField(
            model_name='host',
            name='roles',
            field=models.ManyToManyField(blank=True, to='environments.Role'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='members',
            field=models.ManyToManyField(to='environments.Host'),
        ),
        migrations.AlterUniqueTogether(
            name='secret',
            unique_together=set([('name', 'safe')]),
        ),
        migrations.RunPython(
            code=update_environment_contenttypes,
        ),
        migrations.AddField(
            model_name='safeaccesscontrol',
            name='all_hosts',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='safeaccesscontrol',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='safeaccesscontrol',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='HostMonitoringException',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitored', models.BooleanField(help_text='force monitored (True) or unmonitored (False)')),
                ('start', models.DateTimeField(help_text='when should this exception begin?')),
                ('end', models.DateTimeField(help_text='when should this exception end?')),
                ('host', models.ForeignKey(help_text='host to create exception for', on_delete=django.db.models.deletion.CASCADE, to='environments.Host')),
            ],
        ),
        migrations.AddField(
            model_name='environment',
            name='monitored',
            field=models.BooleanField(default=False, help_text='should new hosts in this environment be monitored by default?'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='role',
            name='name',
            field=models.CharField(help_text='matches salt state name', max_length=256, unique=True),
        ),
        migrations.AlterField(
            model_name='safe',
            name='name',
            field=models.CharField(help_text='name for this collection of secrets', max_length=256, unique=True),
        ),
        migrations.CreateModel(
            name='Grain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='the name of the grain', max_length=256)),
                ('value', models.CharField(help_text='the value for the grain', max_length=256)),
                ('host', models.ForeignKey(help_text='host to assign grain to', on_delete=django.db.models.deletion.CASCADE, to='environments.Host')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='safe',
            unique_together=set([('name', 'vault')]),
        ),
        migrations.AlterField(
            model_name='host',
            name='hostname',
            field=models.CharField(help_text='FQDN', max_length=256, unique=True),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='kind',
            field=enumfields.fields.EnumField(enum=dewey.environments.ClusterType, max_length=10),
        ),
        migrations.AlterField(
            model_name='host',
            name='operating_system',
            field=enumfields.fields.EnumField(enum=dewey.environments.OperatingSystem, max_length=10),
        ),
        migrations.AlterField(
            model_name='vault',
            name='vault_protocol',
            field=enumfields.fields.EnumField(enum=dewey.core.utils.ProtocolEnum, max_length=10),
        ),
        migrations.AlterField(
            model_name='cluster',
            name='kind',
            field=enumfields.fields.EnumIntegerField(enum=dewey.environments.ClusterType),
        ),
        migrations.AlterField(
            model_name='host',
            name='operating_system',
            field=enumfields.fields.EnumIntegerField(enum=dewey.environments.OperatingSystem),
        ),
        migrations.AlterField(
            model_name='vault',
            name='vault_protocol',
            field=enumfields.fields.EnumIntegerField(enum=dewey.core.utils.ProtocolEnum),
        ),
    ]
