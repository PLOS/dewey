"""
Django settings for dewey project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys

from django.core.exceptions import ImproperlyConfigured
from dewey.core.utils.settings import get_env, get_log_dir

SETTINGS_MODULE = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MODULE_ROOT = os.path.dirname(SETTINGS_MODULE)
PROJECT_ROOT = os.path.dirname(MODULE_ROOT)


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env('DEWEY_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['dewey.sfo.plos.org', 'dewey.soma.plos.org']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'compressor',
    'dewey.core',
    'dewey.environments',
    'dewey.hardware',
    'dewey.networks',
    'dewey.salt',
    'gunicorn',
    'rest_framework',
    'rest_framework.authtoken',
    'django_celery_results',
    'django_celery_beat',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'dewey.core.middleware.login_required.LoginRequiredMiddleware',
)

ROOT_URLCONF = 'dewey.core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dewey.core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'dewey',
        'USER' : get_env('DEWEY_POSTGRES_USER'),
        'PASSWORD' : get_env('DEWEY_POSTGRES_PASSWORD'),
        'HOST' : get_env('DEWEY_POSTGRES_HOST'),
        'PORT' : get_env('DEWEY_POSTGRES_PORT')
    },
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

LOGIN_REDIRECT_URL = 'index'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
)

COMPRESS_PRECOMPILERS = (
    ('text/scss', 'sassc {infile} {outfile}'),
    ('text/sass', 'sassc {infile} {outfile}')
)

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Logging configuration

LOG_DIR = get_log_dir()

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
      'verbose': {
          'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
          'datefmt' : "%d/%b/%Y %H:%M:%S"
      },
      'simple': {
          'format': '%(levelname)s %(message)s'
      },
    },
    'handlers': {
      'file': {
          'level': 'DEBUG',
          'class': 'logging.handlers.RotatingFileHandler',
          'filename': os.path.join(LOG_DIR, 'dewey.log'),
          'maxBytes' : 1024 * 1024 * 5,  # 5MiB
          'backupCount' : 5,
          'formatter': 'verbose'
      },
    },
    'loggers': {
      'django': {
          'handlers':['file'],
          'propagate': True,
          'level': 'DEBUG',
      },
      'dewey' : {
          'handlers': ['file'],
          'level': 'DEBUG',
      },
    }
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'PAGE_SIZE': 25,
}


# Jira integration for syncing assets

JIRA_USERNAME = get_env('DEWEY_JIRA_USER')
JIRA_PASSWORD = get_env('DEWEY_JIRA_PASSWORD')
JIRA_URL = 'https://developer.plos.org/jira'


# Celery Task queue

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_TASK_SERIALIZER = 'pickle'
CELERY_RESULT_SERIALIZER = 'pickle'
CELERY_ACCEPT_CONTENT = {'pickle'}

SITE_PROTOCOL = 'http'
SITE_DOMAIN = 'localhost:8000'

# Detect gunicorn
try:
  if 'gunicorn' in sys.argv[0]:
    FRONTEND = 'gunicorn'
  elif 'runserver' in sys.argv[1]:
    FRONTEND = 'runserver'
  else:
    FRONTEND = None
except IndexError:
  FRONTEND = None


NAGIOS_NETWORKS = ['soma-servers']

TASKS_ENABLED = True

APPEND_SLASH = True

PLOS_CA_CERTIFICATE = '/etc/ssl/certs/plos-easyrsa-ca.pem'

HOST_MONITORING_DELAY = 14400

PASSWORD_RESET_URL = 'https://developer.plos.org/jira/secure/CreateIssueDetails!init.jspa?pid=10101&issuetype=10404&summary=dewey+password+reset'

LOGIN_EXEMPT_URLS = (
    r'^api/.*',
    r'^environments/nagios/.*',
    r'^hosts/nagios/.*',
    r'accounts/password/reset/request/',
)

# SALT_HIGHSTATE_DAYS sets the number of days that records of
# uneventful highstate runs will be maintained.
SALT_HIGHSTATE_DAYS = 1

# SALT_HIGHSTATE_CHANGE_DAYS sets the number of days that records of
# highstate changes will be retained. In addition to the change records,
# the corresponding highstate records are also retained.
SALT_HIGHSTATE_CHANGE_DAYS = 365

# SALT_HIGHSTATE_ERROR_DAYS sets the number of days that records of
# highstate errors will be retained. In addition to the error records,
# the corresponding highstate records are also retained.
SALT_HIGHSTATE_ERROR_DAYS = 365

PAGINATION_RECORDS = 25
